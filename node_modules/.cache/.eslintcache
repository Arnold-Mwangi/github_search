[{"/home/user/Development/projects/github-search/src/index.js":"1","/home/user/Development/projects/github-search/src/App.js":"2","/home/user/Development/projects/github-search/src/reportWebVitals.js":"3","/home/user/Development/projects/github-search/src/context/GithubContext.js":"4","/home/user/Development/projects/github-search/src/components/header/Header.js":"5","/home/user/Development/projects/github-search/src/components/repos/Repos.js":"6","/home/user/Development/projects/github-search/src/components/Profile/ProfileDisplay.js":"7"},{"size":535,"mtime":1694635480985,"results":"8","hashOfConfig":"9"},{"size":434,"mtime":1694698164593,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1694635480989,"results":"11","hashOfConfig":"9"},{"size":590,"mtime":1694686423576,"results":"12","hashOfConfig":"9"},{"size":2319,"mtime":1694694710788,"results":"13","hashOfConfig":"9"},{"size":723,"mtime":1694700366018,"results":"14","hashOfConfig":"9"},{"size":2412,"mtime":1694700298470,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ftsy29",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/home/user/Development/projects/github-search/src/index.js",[],[],"/home/user/Development/projects/github-search/src/App.js",[],[],"/home/user/Development/projects/github-search/src/reportWebVitals.js",[],[],"/home/user/Development/projects/github-search/src/context/GithubContext.js",[],[],"/home/user/Development/projects/github-search/src/components/header/Header.js",["39"],[],"import {useCallback, useEffect, useContext, useState } from 'react'\nimport { AppContext } from '../../context/GithubContext';\nimport axios from 'axios'\nimport logo from './logo.svg';\nimport './css/style.css';\n\n\n\nfunction Header() {\n    const { dispatch } = useContext(AppContext)\n    const [searchQuery, setsearchQuery] = useState('');\n    const [searchType, setSearchType] = useState('user')\n\n\n    const handleSearch = useCallback(() => {\n        const endpoint = searchType === 'user' ? 'users' : 'repositories'\n        axios\n            .get(`https://api.github.com/search/${endpoint}?q=${searchQuery}`)\n            .then((res) => {\n                dispatch({ type: 'SET_USERS', payload: res.data.items })\n            })\n            .catch((error) => {\n                console.error('Error', error)\n            });\n    }, [searchQuery, searchType, dispatch]);\n\n\n    useEffect(() => {\n\n        if (!searchQuery.trim()) {\n            axios\n                .get(`https://api.github.com/users/github`)\n                .then((res) => {\n                    dispatch({ type: 'SET_USERS', payload: res.data })\n                })\n                .catch((error) => {\n                    console.error('Error', error)\n                });\n\n        }\n\n    }, [dispatch])\n\n    const handleSearchButtonClick = () => {\n        handleSearch(); // Call the handleSearch function when the button is clicked\n    };\n\n\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <div>\n                    <input\n                        type='text'\n                        placeholder='search...'\n                        value={searchQuery}\n                        onChange={(e) => setsearchQuery(e.target.value)}\n                    />\n                    <select\n                        value={searchType}\n                        onChange={(e) => setSearchType(e.target.value)}\n                    >\n                        <option value='user'>User</option>\n                        <option vaue='repo'>Repository</option>\n                    </select>\n                    <button onClick={handleSearchButtonClick}>search</button>\n                </div>\n\n            </header>\n        </div>\n    );\n}\n\nexport default Header;\n","/home/user/Development/projects/github-search/src/components/repos/Repos.js",[],[],"/home/user/Development/projects/github-search/src/components/Profile/ProfileDisplay.js",["40","41","42"],[],"import { useContext, useState, useEffect} from \"react\";\nimport { AppContext } from \"../../context/GithubContext\";\nimport './css/style.css'\n\nfunction Profile() {\n    const { Users, dispatch } = useContext(AppContext);\n    const [imageLoading, setImageLoading] = useState(true);\n\n    useEffect(() => {\n        setImageLoading(false); // Reset imageLoading to true when Users data changes\n    }, [Users]);\n\n    if (!Users) {\n        return <div>Loading...</div>;\n    }\n\n    // Destructure user data\n    const {\n        login,\n        avatar_url,\n        bio,\n        name,\n        type,\n        company,\n        location,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        html_url,\n        organizations_url,\n        repos_url,\n    } = Users;\n\n        // Function to render a loading div if data is not available\n        const renderLoading = (value) => {\n            return value ? value : <div>Loading...</div>;\n        };\n\n    return (\n        <>\n            <div className=\"profile\">\n                <div className=\"profile_items\">\n                    <div className=\"profile_pic\">\n                    {imageLoading && <div>Loading...</div>}\n                        <img \n                        src={avatar_url}\n                        alt={login}\n                        onLoad={() => setImageLoading(false)} />\n                    </div>\n                    <div className=\"profile_details\">\n                        <a href={html_url}><h2>{login}</h2></a>\n                        <p><strong>Bio:</strong> {renderLoading(bio || 'N/A')}</p>\n                        <p><strong>Type:</strong> {type}</p>\n                        <p><strong>Company:</strong> {renderLoading(company || 'N/A')}</p>\n                        <p><strong>Location:</strong> {renderLoading(location || 'N/A')}</p>\n                        <p><strong>Followers:</strong> {renderLoading(followers || '0')}</p>\n                        <p><strong>Following:</strong> {renderLoading(following || '0')}</p>\n                        <p><strong>Public Repositories:</strong> {renderLoading(public_repos || '0')}</p>\n                        <p><strong>Public Gists:</strong> {renderLoading(public_gists || '0')}</p>\n                        <a href={renderLoading(repos_url)}>View Account</a>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </>\n\n    )\n\n}\n\nexport default Profile",{"ruleId":"43","severity":1,"message":"44","line":42,"column":8,"nodeType":"45","endLine":42,"endColumn":18,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":20,"nodeType":"49","messageId":"50","endLine":6,"endColumn":28},{"ruleId":"47","severity":1,"message":"51","line":22,"column":9,"nodeType":"49","messageId":"50","endLine":22,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":31,"column":9,"nodeType":"49","messageId":"50","endLine":31,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchQuery'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'organizations_url' is assigned a value but never used.",{"desc":"54","fix":"55"},"Update the dependencies array to be: [dispatch, searchQuery]",{"range":"56","text":"57"},[1249,1259],"[dispatch, searchQuery]"]