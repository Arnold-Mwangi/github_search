{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/projects/github-search/src/components/repos/Repos.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { AppContext } from \"../../context/GithubContext\";\nimport './css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Repos() {\n  _s();\n  const itemsPerPage = 20;\n  const [currentPage, setCurrentPage] = useState(1);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const {\n    Users,\n    Repositories\n  } = useContext(AppContext);\n  const paginatedRepositories = Repositories.slice(startIndex, endIndex);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repos\",\n      children: paginatedRepositories.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Repository\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, repo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: Math.ceil(Repositories.length / itemsPerPage)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? 'active' : '',\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(Repos, \"weccAeVHzNfsi3RaPrWYjjADlpg=\");\n_c = Repos;\nexport default Repos;\n\n// function Repos() {\n\n//     const {Users, Repositories} = useContext(AppContext);\n//     console.log(Repositories)\n\n//     if(Array.isArray(Users)) {\n//         return (\n//             <div className=\"repos\">\n//                 {Repositories.map((repo) =>(\n//                     <div className=\"repo\" key ={repo.id}>\n//                         <h1>repos</h1>\n//                         <h2>{repo.name}</h2>\n//                         <p>{repo.description}</p>\n//                     </div>\n//                 ))}\n//             </div>\n\n//         )\n//     }else{\n//         const{login, repos_url} = Users\n//         return <div><a href ={repos_url}>View {login}'s Repositories</a> </div>        \n\n//     }\n\n// }\n\n// export default Repos\nvar _c;\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"names":["useContext","AppContext","jsxDEV","_jsxDEV","Repos","_s","itemsPerPage","currentPage","setCurrentPage","useState","startIndex","endIndex","Users","Repositories","paginatedRepositories","slice","handlePageChange","pageNumber","children","className","map","repo","fileName","_jsxFileName","lineNumber","columnNumber","name","description","id","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/home/user/Development/projects/github-search/src/components/repos/Repos.js"],"sourcesContent":["import { useContext } from \"react\"\nimport { AppContext } from \"../../context/GithubContext\"\nimport './css/style.css'\n\n\nfunction Repos() {\n    const itemsPerPage = 20;\n    const [currentPage, setCurrentPage] = useState(1);\n  \n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n  \n    const { Users, Repositories } = useContext(AppContext);\n    const paginatedRepositories = Repositories.slice(startIndex, endIndex);\n  \n    const handlePageChange = (pageNumber) => {\n      setCurrentPage(pageNumber);\n    };\n  \n    return (\n      <div>\n        <div className=\"repos\">\n          {paginatedRepositories.map((repo) => (\n            <div className=\"repo\" key={repo.id}>\n              <h1>Repository</h1>\n              <h2>{repo.name}</h2>\n              <p>{repo.description}</p>\n            </div>\n          ))}\n        </div>\n  \n        <div className=\"pagination\">\n          {Array.from({ length: Math.ceil(Repositories.length / itemsPerPage) }, (_, index) => (\n            <button\n              key={index}\n              onClick={() => handlePageChange(index + 1)}\n              className={currentPage === index + 1 ? 'active' : ''}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  \n  export default Repos;\n  \n\n// function Repos() {\n\n//     const {Users, Repositories} = useContext(AppContext);\n//     console.log(Repositories)\n    \n//     if(Array.isArray(Users)) {\n//         return (\n//             <div className=\"repos\">\n//                 {Repositories.map((repo) =>(\n//                     <div className=\"repo\" key ={repo.id}>\n//                         <h1>repos</h1>\n//                         <h2>{repo.name}</h2>\n//                         <p>{repo.description}</p>\n//                     </div>\n//                 ))}\n//             </div>\n\n//         )\n//     }else{\n//         const{login, repos_url} = Users\n//         return <div><a href ={repos_url}>View {login}'s Repositories</a> </div>        \n        \n//     }\n\n    \n\n// }\n\n// export default Repos"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMC,UAAU,GAAG,CAACH,WAAW,GAAG,CAAC,IAAID,YAAY;EACnD,MAAMK,QAAQ,GAAGD,UAAU,GAAGJ,YAAY;EAE1C,MAAM;IAAEM,KAAK;IAAEC;EAAa,CAAC,GAAGb,UAAU,CAACC,UAAU,CAAC;EACtD,MAAMa,qBAAqB,GAAGD,YAAY,CAACE,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;EAEtE,MAAMK,gBAAgB,GAAIC,UAAU,IAAK;IACvCT,cAAc,CAACS,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAD,QAAA,EACnBJ,qBAAqB,CAACM,GAAG,CAAEC,IAAI,iBAC9BlB,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBf,OAAA;UAAAe,QAAA,EAAI;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBtB,OAAA;UAAAe,QAAA,EAAKG,IAAI,CAACK;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBtB,OAAA;UAAAe,QAAA,EAAIG,IAAI,CAACM;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHAJ,IAAI,CAACO,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI7B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENtB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAD,QAAA,EACxBW,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAACpB,YAAY,CAACkB,MAAM,GAAGzB,YAAY;MAAE,CAAC,EAAE,CAAC4B,CAAC,EAAEC,KAAK,kBAC9EhC,OAAA;QAEEiC,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACmB,KAAK,GAAG,CAAC,CAAE;QAC3ChB,SAAS,EAAEZ,WAAW,KAAK4B,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAG;QAAAjB,QAAA,EAEpDiB,KAAK,GAAG;MAAC,GAJLA,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAvCMD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAyCZ,eAAeA,KAAK;;AAGtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}